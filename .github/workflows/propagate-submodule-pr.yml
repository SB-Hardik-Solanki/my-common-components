name: Propagate Submodule via HTTPS

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  get-repos:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      list: ${{ steps.set-matrix.outputs.list }}

    steps:
      - name: Install tools
        run: sudo apt-get install gh jq -y

      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.GH_DEPLOY_TOKEN }}" | gh auth login --with-token

      - name: Fetch repo list
        id: set-matrix
        run: |
          REPOS=$(gh repo list SB-Hardik-Solanki --limit 100 --json name -q '.[].name' \
            | grep '^website-' | jq -R . | jq -s .)
          echo "matrix={\"repo\": $REPOS}" >> $GITHUB_OUTPUT
          echo "list=$REPOS" >> $GITHUB_OUTPUT

  update-and-track:
    needs: get-repos
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo: [my-website-a, my-website-b]

    env:
      COMMON_REPO_URL: https://x-access-token:${{ secrets.GH_DEPLOY_TOKEN }}@github.com/SB-Hardik-Solanki/my-common-components.git
      COMMON_SUBMODULE_PATH: src/shared
      BRANCH_NAME: update-common-submodule
      COMMIT_MESSAGE: "chore: update common submodule"
      PR_TITLE: "chore: update common submodule to latest main"
      PR_BODY: "This PR updates the common Astro submodule to the latest commit from `main`."

    steps:
      - name: Install tools
        run: sudo apt-get install gh jq -y

      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.GH_DEPLOY_TOKEN }}" | gh auth login --with-token

      - name: Clone target repo
        run: |
          repo=${{ matrix.repo }}
          echo "ðŸ“¦ Cloning $repo"
          git clone https://x-access-token:${{ secrets.GH_DEPLOY_TOKEN }}@github.com/SB-Hardik-Solanki/$repo.git
          cd $repo

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          echo "ðŸ”€ Create or reset branch $BRANCH_NAME"
          git checkout -B $BRANCH_NAME

          echo "ðŸ§¹ Remove previous submodule"
          git rm -rf $COMMON_SUBMODULE_PATH || rm -rf $COMMON_SUBMODULE_PATH

          echo "âž• Add submodule cleanly via HTTPS"
          git submodule add -b main $COMMON_REPO_URL $COMMON_SUBMODULE_PATH
          git submodule update --init --recursive

          echo "ðŸ“Œ Commit updated submodule pointer"
          git add .gitmodules $COMMON_SUBMODULE_PATH
          git commit -m "$COMMIT_MESSAGE" || echo "No changes"

          echo "ðŸš€ Push from HEAD to $BRANCH_NAME to bypass protection rules"
          git push https://x-access-token:${{ secrets.GH_DEPLOY_TOKEN }}@github.com/SB-Hardik-Solanki/$repo.git HEAD:$BRANCH_NAME || echo "Nothing to push"

          echo "ðŸ“¨ Create PR if needed"
          PR_EXISTS=$(gh pr list --repo SB-Hardik-Solanki/$repo --head $BRANCH_NAME --json number -q '.[0].number')
          if [[ -z "$PR_EXISTS" ]]; then
            gh pr create \
              --repo SB-Hardik-Solanki/$repo \
              --title "$PR_TITLE" \
              --body "$PR_BODY" \
              --head "$BRANCH_NAME" \
              --base "main"
          fi
